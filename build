#!/bin/sh
#
# Usage:
#
# ./build -doc
#    Generates the javadoc
#
# ./build
#    Builds all the java classes
#
# If you have the ON build tools installed, then jstyle gets run.
#

PATH=/usr/jdk/instances/jdk1.8.0/bin:$PATH
export PATH

JKDIR=`dirname $0`
LIBDIR=${JKDIR}/lib
ARCHLIBDIR=${LIBDIR}/`/usr/bin/uname -p`
JARLIBDIR=${LIBDIR}/java
JAVA=java

JFJAR=${JARLIBDIR}/jfreechart-1.5.4.jar
JANGLEJAR=${JARLIBDIR}/jangle.jar
JINGLEJAR=${JARLIBDIR}/jingle.jar
JUMBLEJAR=${JARLIBDIR}/jumble.jar
SNMPJAR=${JARLIBDIR}/snmp.jar
MIBBLEJARS=${JARLIBDIR}/grammatica-1.4.jar:${JARLIBDIR}/mibble-2.3.jar
BUILDJARS=${JFJAR}:${JINGLEJAR}:${JUMBLEJAR}:${SNMPJAR}:${MIBBLEJARS}

#
# run
# ./build pmd
# to use this, you must have pmd in your path
#
# new PMD version has rulesets
#
PMDRULES="basic braces clone finalizers imports migrating strictexception sunsecure typeresolution unnecessary unusedcode"
PMDCATRULES="security"
PMDCACHE="${HOME}/.pmd/cache.jangle"

case $1 in
doc|-doc)
	rm -fr javadoc
	mkdir javadoc
	javadoc -classpath $BUILDJARS:. -d javadoc uk.co.petertribble.jangle
	exit 0
	;;
clean)
	rm -f `find uk/co -type f -name '*.class'`
	rm -f `find . -type f -name '*~'`
	rm -fr javadoc
	exit 0
	;;
pmd|-pmd)
	RULESETS=""
	for RULE in $PMDRULES
	do
	    RULESETS="${RULESETS},rulesets/java/${RULE}.xml"
	done
	for RULE in $PMDCATRULES
	do
	    RULESETS="${RULESETS},category/java/${RULE}.xml"
	done
	RULESETS=`echo $RULESETS|sed s:,::`
	if [ ! -d ${HOME}/.pmd ]; then
	    mkdir -p ${HOME}/.pmd
	fi
	pmd check --cache ${PMDCACHE} -d uk -R $RULESETS --use-version java-1.8 --aux-classpath `echo lib/java/* | sed 's= =:=g'` 2>/dev/null
	pmd check --cache ${PMDCACHE}.html -d help/*.html  -R category/html/bestpractices.xml 2>/dev/null
	exit 0
	;;
packages)
	cat jangle | sed s:INSTALLED=false:INSTALLED=true: > jangle.installed
	./mkproto i386 $2 > prototype
	pkgmk -d /tmp -f prototype -r `pwd` TRIBjangle
	pkgtrans -s /tmp /tmp/TRIBjangle.pkg TRIBjangle
	ls -lh /tmp/TRIBjangle.pkg
	rm prototype
	rm jangle.installed
	rm -f depend
	exit 0
	;;
esac

XFLAGS="-Xlint -Xlint:-serial"

if [ -x /opt/onbld/bin/jstyle ]; then
	/opt/onbld/bin/jstyle `find uk/co/petertribble -name '*.java'`
fi

javac ${XFLAGS} -classpath .:${BUILDJARS} uk/co/petertribble/jangle/*.java

jar -cmf jangle.manifest ${JANGLEJAR} pixmaps/*.png help/*.html help/CDDL.txt properties/*.properties `find uk/co -name '*.class'`
